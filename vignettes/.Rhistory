---
title: "motmot.2.0"
author: "Mark Puttick"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{Vignette Title}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
<style>
p.caption {
font-size: 1.1em; font-weight: bold;
}
</style>
Models Of Trait Macroevolution On Trees (MOTMOT) is an R package that allows for testing of models of trait evolution (Thomas *et al.* 2012).
- [Tree transformation](#models-of-trait-evolution) models estimated using Maximum likelihood: [Brownian motion](#brownian-motion), [Pagel's Lambda](pagels-lambda), [Delta](#delta), [Kappa](#kappa), [Ornstein-Uhlenbeck (OU)](#ornstein-uhlenbeck), [Acceleration-Deaceleration (ACDC) and early bursts](#ACDC-and-Early-Burst), [psi and multispi](#psi and multispi), and [estimating lambda alongside other models](#estimate-lambda-alongside-models)
- [Rate heterogeneous models of evolution](#rate-heterogeneous-models-of-evolution). Fit models in which the rate of evolution differs in clades selected [*a priori*](#rate-heterogeneity-selected-a-priori) (O'Meara *et al.* 2006; Thomas *et al.* 2006), and models with [no *a-priori* shift locations](#rate-heterogeneity-with-no-a-priori-information) (Thomas *et al.* 2012)
- [TimeSlice](#time-slice-model) fit models in which all rates change at a specific time(s) by tested all times or those selected by the user
- [Nested Shift mode](#nested-models-of-evolution) Fit models models in which the ancestral BM rate switches to a 'nested' rate within a monophyletic clade in the phylogeny
- [Bayesian estimation](#bayesian-estimation-of-tree-transformation-models) of tree transformation models
- [Character displacement models](#character-displacement-models) of inter-specific competition from Clarke *et al.* (2017)
- [Fast estimation of Phylogenetic Generalised Least Squares (PGLS)](#fast-estimation-of-phylogenetic-generalised-least-squares) using independent contrasts
# Introduction
First we load motmot.2.0
```{r}
library(motmot.2.0, quietly=T)
```
For these examples we will use anolis data available from motmot. A time-calibrated phylogeny of anolis species ("anolis.tree"), and various trait and biogeographical trait data ("anolis.data")
```{r}
data(anolis.tree)
data(anolis.data)
names(anolis.data)
attach(anolis.data)
anolis.tree
```
We will use the continuous trait data: male snout-ventral length 'Male_SVL'. We will construct a matrix of just these data, and check if we have missing data
```{r}
male.length <- matrix(Male_SVL, dimnames=list(rownames(anolis.data)))
any(is.na(male.length[,1]))
```
We do. So we will remove these data from the male.length data, and log the trait data. This can de done using the function 'sortTraitData'
```{r}
sortedData <- sortTraitData(anolis.tree, male.length)
phy <- sortedData$phy
male.length <- sortedData$trait
```
Finally, we will 'prune' the species from the tree using 'drop.tip' from APE. Do our species from the data and tree now match?
```{r}
name.check(phy, male.length)
```
They do. We can now plot our tree and data using the "traitData.plot" function
```{r plot1, fig.cap = "Figure 1. TraitData showing the realtive male snout ventral length at the tips", echo = T, fig.height = 5, fig.width = 5, fig.path='figures/', dev=c('png', 'pdf')}
traitData.plot(y=male.length, phy)
```
We will fit the "tm2" model that allows for clade- and branch-specific changes in rate. This uses the familiar function 'transformPhylo.ML'. We will fit the models to a subset of these data: including the clade from node 182 only using the APE (Paradis *et al* 2018) function 'extract.clade'
```{r plot2, fig.cap = "Figure 2. Subset of the anolis tree", echo = T, fig.height = 7, fig.width = 7, fig.path='figures/', dev=c('png', 'pdf')}
plot(phy, show.tip.label=FALSE, no.margin=TRUE, edge.col="grey20")
nodelabels(182, 182, bg="black", col="white")
phy.clade <- extract.clade(phy, 182)
male.length.clade <- as.matrix(male.length[match(phy.clade$tip.label, rownames(male.length)),])
```
# Models of trait evolution
We can now test various models of evolution using our trait data.
## Brownian motion
To start we will fit a simple Brownian motion model to the data, as the null hypothesis of phylogenetic trait evolution (Cavalli-Sforza and Edwards 1967; Felsenstein 1973; 1985). Brownian motion describes a process in which tip states are a multi-variate normal distribution . On a phylogeny, the multi-variate mean of tip states is equal to the root state estimate, and variance accummulates linearly through time. Until a lineages split on a tree trait evolution is shared, but following a split individual branches evolve and accummulate variance independently from their shared ancestral value.
```{r}
bm.ml <- transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="bm")
bm.ml
```
## Pagel's lambda
We can also fit models to test Pagel's lambda (Pagel 1997; 1999). Pagel's lambda is a measure of phylogenetic 'signal' in which the degree to which shared history of taxa has driven trait distributions at tips. In this model, internal branche lengths are changed by the lambda value. If lambda is 1, then branches are equal to a Brownian motion model (high phylogenetic signal), and lower values of lambda indicate less influence of shared history on trait values at the tips. Finally, a value of 0 indicates no phylogenetic influence on trait distributions, and is equivalent to a 'star phylogeny' with no shared branch lengths.
The maximum likelihood of lambda can be estimate in motmot.2.0
```{r}
lambda.ml <- transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="lambda")
lambda.ml
```
The maximum likelhood estimate of Pagel's Lambda is equal to 0.83
A new feature in motmot allows for plotting of the likelihood profile for the branch-transformation parameter, in this case Pagel's lambda
```{r plot3, fig.cap = "Figure 3. Profile plot of ML estimation for Pagel's lambda", echo = T, fig.height = 5, fig.width = 5, , fig.path='figures/', dev=c('png', 'pdf')}
lambda.ml <- transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="lambda", profilePlot=T)
```
We can now compare the fit of the BM and Lambda models. Lambda has higher likelihood, but it also has more parameters (the root state and sigma squared are shared in both models, lambda also estimates the lambda parameter). We can test whether this is a significant improvement. First we will use the chi-squared distribution. The models differ in one degree of freedom: BM has 2 parameters (brownian variance, root state) and lambda has those two parameters plus the value of lambda, so 3 parameters. We can use the stats function pchisq to obtain a p value, and see that lambda is indeed a superior fit to these data
```{r}
p.value <- 1 - pchisq(lambda.ml$MaximumLikelihood - bm.ml$logLikelihood, 1)
p.value
```
Additionally there is a large Akaike Information Criterion (AICc) difference between the two models: BM has a higher AICc compared to Lambda. The differce (11.09) is >4 which is tradtionally seen as indication of a superior fit (Burnham and Anderson 2003).
```{r}
bm.ml$AICc- lambda.ml$AICc
```
The parameters, brownian variance, root state, Maximum likelihoods, AIC, and AICc can be obtained for a number of models in motmot.
## Delta
Delta indicates a slow or increase in the rate of trait evolution through time (Pagel 1997; 1999); a value of 1 is equivalent to Brownian motion, < 1 indicates a slow-down, and > 1 is difficult to interpret (greater change near the present). Here we find a MLE of 2.23 but the CI spans < 1 to > 4
```{r plot4, fig.cap = "Figure 4. Profile plot to estimate delta", echo = T, fig.height = 5, fig.width = 5, , fig.path='figures/', dev=c('png', 'pdf')}
delta.ml <- transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="delta", profilePlot=T)
delta.ml
```
## Kappa
Kappa is used as a measure of punctuated evolution and spans values of 0-1 (Pagel 1997:1999). 1 is equivalent to BM, and 0 indicates trait change occurs at events of speciation. Here there is evidence of punctuated evolution (the warning message simply tells out the CI falls outside the parameter bounds - in this case below zero).
```{r plot5, fig.cap = "Figure 5. Profile plot to estimate kappa", echo = T, fig.height = 5, fig.width = 5, , fig.path='figures/', dev=c('png', 'pdf')}
kappa.ml <- transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="kappa", profilePlot=T)
```
## Ornstein-Uhlenbeck
The OU model allows for modelling of attraction to a optimum value, alpha (Hansen 1997; Butler and King 2004). This model again is similar to the Brownian motion model, but models the strength of attraction to alpha. THe OU model can be difficult to interpret and care is advised in its use (Cooper *et al.* 2016).
In motmot.2.0, as with most implements of the phylogenetic OU model, the value of attraction parameter is equal to the ancestral trait estimate.
```{r plot6, fig.cap = "Figure 6. Profile plot to estimate alpha", echo = T, fig.height = 5, fig.width = 5, , fig.path='figures/', dev=c('png', 'pdf')}
ou.ml <- transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="OU", profilePlot=T)
transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="OU", profilePlot=T)
transformPhylo.ML(phy=phy.clade, y=male.length.clade, model="OU", profilePlot=T)
